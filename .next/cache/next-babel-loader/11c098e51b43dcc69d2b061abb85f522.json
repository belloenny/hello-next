{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"/Users/mac/Desktop/hello-next/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Layout } from '../components/Layout';\nimport { useRestaurantsQuery } from '../graphql/types';\n\nvar HomePage = function HomePage(_ref) {\n  var userAgent = _ref.userAgent;\n\n  var _useRestaurantsQuery = useRestaurantsQuery(),\n      data = _useRestaurantsQuery.data,\n      error = _useRestaurantsQuery.error,\n      loading = _useRestaurantsQuery.loading;\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"Loading\");\n  }\n\n  if (error || !data) {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Error loading Vendors\");\n  }\n\n  var restaurants = data.restaurants;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, restaurants && restaurants.map(function (restaurant) {\n    __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Restaurant name: \", restaurant.Name), __jsx(\"img\", {\n      alt: \"\",\n      src: restaurant.picture.url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }));\n};\n\nHomePage.getInitialProps = function _callee() {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", {});\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/mac/Desktop/hello-next/pages/index.tsx"],"names":["React","Layout","useRestaurantsQuery","HomePage","userAgent","data","error","loading","restaurants","map","restaurant","Name","picture","url","getInitialProps"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAMA,IAAMC,QAAyB,GAAG,SAA5BA,QAA4B,OAAmB;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,6BAChBF,mBAAmB,EADH;AAAA,MACzCG,IADyC,wBACzCA,IADyC;AAAA,MACnCC,KADmC,wBACnCA,KADmC;AAAA,MAC5BC,OAD4B,wBAC5BA,OAD4B;;AAEjD,MAAGA,OAAH,EAAY;AACR,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACH;;AACD,MAAGD,KAAK,IAAE,CAACD,IAAX,EAAgB;AACZ,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAP;AACH;;AACD,MAAMG,WAAW,GAAGH,IAAI,CAACG,WAAzB;AACA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,WAAW,IAAIA,WAAW,CAACC,GAAZ,CAAgB,UAAAC,UAAU,EAAI;AAC1C,gCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACsBA,UAAU,CAACC,IADjC,CADA,EAIA;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,GAAG,EAAED,UAAU,CAACE,OAAX,CAAmBC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA;AAMH,GAPe,CADpB,CADJ;AAaH,CAtBD;;AAwBAV,QAAQ,CAACW,eAAT,GAA2B;AAAA;AAAA;AAAA;AAAA;AAAA,2CACf,EADe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA3B;;AAMA,eAAeX,QAAf","sourcesContent":["import React from 'react'\nimport { NextPage } from 'next';\nimport Link from'next/link';\nimport { Layout } from '../components/Layout';\nimport { useRestaurantsQuery } from '../graphql/types';\n\ninterface Props {\n    userAgent?: string\n}\n\nconst HomePage: NextPage<Props> = ({ userAgent }) => {\n    const { data, error, loading } = useRestaurantsQuery()\n    if(loading) {\n        return <div>Loading</div>\n    }\n    if(error||!data){\n        return <div>Error loading Vendors</div>\n    }\n    const restaurants = data.restaurants\n    return (\n        <Layout>\n            {restaurants && restaurants.map(restaurant => {\n                <>\n                <h1>\n                    Restaurant name: {restaurant.Name}\n                </h1>\n                <img alt=\"\" src={restaurant.picture.url}></img>\n                </>\n            })}\n            \n        </Layout>\n    )\n}\n\nHomePage.getInitialProps = async () => {\n    return  {\n        \n    }\n};\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}